x = 2
x
for (i in 1:100){}
for (i in 1:100){ print(i)}
library(readr)
# importação de bibs
install.packages("readr")
install.packages("dplyr")
library(readr)
library(dplyr)
library(readxl)
dados <- read_excel("/mnt/sdb1/discohd/documentos/dados.xlsx")
dados
head(dados)
head(dados)
glimpse(dados)
plot(x = dados$x1, y = dados$y)
plot(x = dados$x2, y = dados$y)
plot(x = dados$x3, y = dados$y)
plot(x = dados$x4, y = dados$y)
summary(dados)
hist(dados$y)
plot(dados$y)
hist(dados$y)
head(dados)
x <- 2
x
rnorm(100)
sum_multi_rq <- summary(multi_rq)
X <- 5; N <- 3
library(dplyr)
r <- tibble(data.frame(A = rnorm(10), B = rpois(10, 1), C = rexp(10))
r <- tibble(data.frame(A = rnorm(10), B = rpois(10, 1), C = rexp(10)))
r <- tibble(data.frame(A = rnorm(10), B = rpois(10, 1), C = rexp(10)))
r
glimpse(r)
str(r)
ls()
rm()
rm(list = ls())
r <- 1
r
rm(r)
class(r)
r  <- 1
class(r)
c <- matrix(, ncol = 10, nrow = 100)
c
c
ls()
class(r)
class(r)
class(c)
rm(c)
rm(r)
getwd()
load("~/.RData")
as.Date("01-01-2020")
class(as.Date("01-01-2020"))
as.Date("01-01-2020", format = "%d-%m-%Y")
x <- rnorm(20)
x <- rnorm(20, 1.5, 1.005)
z <- rpois(20, 3)
y <- 3*x + 1.1*x^2 + 1.7*z + 0.3*z^2 + rnorm(20)
y
plot(y)
plot(y, x)
plot(x, y)
plot(x^2, y)
plot(z^2, y)
plot(z, y)
lm(y~x + z)
summary(lm(y~x + z))
summary(lm(y~poly(x, 2)))
summary(lm(y~poly(x, 2) + z))
summary(lm(y~poly(x, 2) + poly(z, 2)))
mod <- lm(y~poly(x, 2) + poly(z, 2))
mod
mod$residuals
plot(mod$fitted.values, y)
plot(mod$residuals, y)
plot(mod$fitted.values, y)
abline()
install.packages(c("demography", "forecast", "lifecontingencies"))
# lib
library(readr)
library(forecast)
library(forecast)
library(demography)
library(lifecontingencies)
library(dplyr)
install.packages("demography")
install.packages("forecast")
library(demography)
install.packages(c("demography", "forecast"))
install.packages("RCurl")
install.packages("RCurl")
install.packages('IRkernel')
IRkernel::installspec()
library(IRkernel)
install.packages("IRkernel")
install.packages('data.table')
library(fread)
library(data.table)
fread('sunspot.csv')
system.time(fread('sunspot.csv'))
system.time(fread('sunspot.csv'))
system.time(fread('sunspot.csv'))
system.time(read.csv('sunspot.csv'))
system.time(read.csv('sunspot.csv'))
system.time(fread('sunspot.csv'))
system.time(fread('mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(fread('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(fread('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(fread('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(fread('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(fread('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(fread('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(read.csv('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(read.csv('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
library(readr)
system.time(read_csv('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(read.csv('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(read_csv('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
system.time(fread('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/data/sp500.csv'))
x = 10
print(x)
cat(x)
printf(x)
sprintf(x)
sprintf('%i', x)
plot(1:10)
plot(rnorm(10))
hist(rnorm(10))
hist(rnorm(100))
hist(rnorm(1000))
x = rnorm(10)
y = rnorm(100)
z = rnorm(100)
mean(x)
mean(y)
mean(z)
sd(x)
sd(y)
sd(z)
var(x)
var(y)
var(y)
var(z)
plot(x)
plot(y)
plot(z)
plot(x, type = 'l')
plot(y, type = 'l')
plot(z, type = 'l')
for i in 1:length(x){}
for i in 1:length(x){}
for i in 1:length(x){
for (i in 1:length(x)){
print(mean(x[1:i]))
}
for (i in 1:length(x)){
print('Média: ', mean(x[1:i]))
print('Desvio:', sd(x[1:i]))
}
print('Média', x)
print('Média', mean(x))
cat('Média', mean(x))
for (i in 1:length(x)){
cat('Média: ', mean(x[1:i]))
cat('Desvio:', sd(x[1:i]))
}
for (i in 1:length(x)){
cat('\nMédia: ', mean(x[1:i]))
cat('\nDesvio:', sd(x[1:i]))
]
for (i in 1:length(x)){
cat('\nMédia: ', mean(x[1:i]))
cat('\nDesvio:', sd(x[1:i]))
}
for (i in 1:length(y)){
cat('\nMédia: ', mean(y[1:i]))
cat('\nDesvio:', sd(y[1:i]))
}
media = rep(length(y), Inf)
media = rep(length(y), Inf)
length(y)
media = rep(length(y), Inf)
media = rep(length(y), inf)
rep(length(y), 0)
rep(100, 0)
rep(0, length(y))
media = rep(0, length(y))
sd = rep(0, length(y))
for (i in 1:length(y)){
cat('\nMédia: ', mean(y[1:i]))
mean[i] = mean(y[1:i])
cat('\nDesvio:', sd(y[1:i]))
desvio[i] = sd(y[1:i])
}
for (i in 1:length(y)){
mean[i] = mean(y[1:i])
desvio[i] = sd(y[1:i])
}
for (i in 1:length(y)){
media[i] = mean(y[1:i])
desvio[i] = sd(y[1:i])
}
sd
sd(10)
sd(100)
sd(100:1000)
desvio = rep(0, length(y))
for (i in 1:length(y)){
media[i] = mean(y[1:i])
desvio[i] = sd(y[1:i])
}
media
plot(media)
plot(media, type='l')
plot(desvio, type='l')
media = rep(0, length(z))
desvio = rep(0, length(z))
for (i in 1:length(z)){}
for (i in 1:length(z)){
media[i] = mean(z[1:i])
desvio[i] = sd(z[1:i])
}
media
mean(media)
mean(desvio)
mean(desvio, na.rm = T)
mean(desvio)
mean(media)
sd(media)
plot(media)
plot(sd)
plot(desvio)
plot(media, type='l')
plot(desvio, type='l')
install.packages(c("devtools", "forecast", "reticulate"))
library(forecast)
install.packages('forecast')
install.packages('curl')
install.packages('tseries')
library(curl)
install.packages("curl")
install.packages('forecast')
library(forecast)
install.packages('devtools')
x = 1
plot(rnorm(100))
install.packages('Rcpp')
library(Rcpp)
library(RcppArmadillo)
install.packages('forecast')
install.packages('forecast', dependencies = TRUE)
install.packages('quantmod', dependencies = T)
install.packages('curl')
library(curl)
install.packages('curl', dependencies = T)
library(curl)
install.packages(c("magrittr", "RcppArmadillo", "rprojroot", "rstudioapi", "vctrs"))
install.packages('curl', dependencies = T)
install.packages('curl', dependencies = T)
library(curl)
install.packages('quantmod', dependencies = T)
install.packages('forecast', dependencies = T)
library(forecast)
ls
ls()
list.files()
read.csv('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r/sp500.csv')
read.csv('mnt/sdb1/discohd/documentos/tutorial_julia_python_r/sp500.csv')
read.csv('.mnt/sdb1/discohd/documentos/tutorial_julia_python_r/sp500.csv')
setwd('/mnt/sdb1/discohd/documentos/tutorial_julia_python_r')
list.files()
read.csv('data/sp500.csv')
df = read.csv('data/sp500.csv')
View(df)
hist(df$close)
hist(df$volume)
hist(df$open)
hist(df$high)
library(forecast)
forecast(df$close)
forecast(df$close[df$symbol=='AAPL'])
t = forecast(df$close[df$symbol=='AAPL'])
plot(t)
t = forecast(df$close[df$symbol=='AAPL'], 20)
plot(t)
etss = forecast.ets(df$close[df$close=='AAPL'], 20)
etss = forecast.ets(df$close[df$symbol=='AAPL'], 20)
df$close[df$symbol == 'AAPL']
df$close[df$symbol == 'AAPL']
plot(df$close[df$symbol == 'AAPL'])
plot(df$close[df$symbol == 'AAPL'], type='l')
t
